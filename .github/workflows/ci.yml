name: MLOps CI/CD MAJOR

on:
  push:
    branches:
      - main

jobs:
  test-suite:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: pytest tests/

  train-and-quantize:
    runs-on: ubuntu-latest
    needs: test-suite
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate dataset using utils.py
        run: python -c "from utils import generate_data; generate_data()"
        working-directory: src

      - name: Ensure data directory
        run: mkdir -p data && cp data/california.csv data/california.csv || echo "Assuming data exists"
        working-directory: src

      - name: Train model
        run: python train.py
        working-directory: src

      - name: Quantize model
        run: python quantize.py
        working-directory: src

      - name: Upload artifacts directory
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: artifacts/

      - name: Debug â€” list contents of src
        run: ls -R
        working-directory: src

  docker-test:
    runs-on: ubuntu-latest
    needs: train-and-quantize
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifacts directory
        uses: actions/download-artifact@v4
        with:
          name: model-artifacts
          path: artifacts/

      - name: Build Docker image
        run: docker build -t mlops-major-app .

      - name: Run predict.py inside container
        run: |
          echo "Checking mounted files inside container..."
          docker run --rm \
            -v ${{ github.workspace }}/:/app \
            -w /app/src \
            mlops-major-app \
            sh -c "ls -R /app && ls /app/artifacts && python predict.py"
